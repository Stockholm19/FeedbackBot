services:
  db:
    image: postgres:16-alpine
    container_name: feedback-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-feedback}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"          # опционально наружу, удобно для локальных тулов
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-feedback}"]
      interval: 5s
      timeout: 3s
      retries: 20

  app:
    build: .
    container_name: feedback-app
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      # чтобы код в Bootstrap увидел хост и порт
      HOST: 0.0.0.0
      PORT: 8080

      # чтобы подключение к БД внутри контейнера шло по имени сервиса
      POSTGRES_HOST: db
      # (эти переменные могут прийти из .env — тогда ниже можно не дублировать)
      # POSTGRES_DB: feedback
      # POSTGRES_USER: postgres
      # POSTGRES_PASSWORD: postgres

      # автозапуск миграций при старте контейнера
      AUTO_MIGRATE: "true"

      # если нужен единый URL вместо полей — раскомментируй строку ниже:
      # DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT:-5432}/${POSTGRES_DB}?sslmode=disable

    ports:
      - "8080:8080"          # доступно из LAN: http://<IP-хоста>:8080
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 5

volumes:
  pgdata:
