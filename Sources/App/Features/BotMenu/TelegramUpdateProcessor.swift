//
//  TelegramUpdateProcessor.swift
//  FeedbackBot
//
//  Created by –†–æ–º–∞–Ω –ü—à–µ–Ω–∏—á–Ω–∏–∫–æ–≤ on 10.10.2025.
//

import Vapor
import Fluent

enum SessionKey {
    static let state = "state"
    static let awaiting = "awaiting_feedback"
}

/// –í—Å—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞ (–º–µ–Ω—é ‚Üí –ø—Ä–∏—ë–º –æ–±—Ä–∞—â–µ–Ω–∏—è ‚Üí —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ)
enum TelegramUpdateProcessor {
    static func handle(update: TGUpdate, app: Application) async throws {
        guard let msg = update.message,
              let raw = msg.text?.trimmingCharacters(in: .whitespacesAndNewlines),
              !raw.isEmpty else { return }

        let chatID = msg.chat.id
        let userID = msg.from?.id ?? chatID
        let username = msg.from?.username
        let text = raw

        // 1) /start: –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é
        if text == "/start" {
            let kb = TGReplyKeyboardMarkup(
                keyboard: [[TGKeyboardButton(text: "–û—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ")]],
                resize_keyboard: true,
                one_time_keyboard: false
            )
            await app.telegram.sendMessage(chatID, "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ *FeedbackBot*.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", keyboard: kb)
            return
        }

        // 2) –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É ‚Üí –∂–¥—ë–º —Ç–µ–∫—Å—Ç
        if text == "–û—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ" {
            SessionStore.shared.set(chatID, key: SessionKey.state, value: SessionKey.awaiting)
            await app.telegram.sendMessage(chatID, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.")
            return
        }

        // 3) –∂–¥—ë–º —Ç–µ–∫—Å—Ç ‚Üí —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
        if (SessionStore.shared.get(chatID, key: SessionKey.state) as? String) == SessionKey.awaiting {
            SessionStore.shared.set(chatID, key: SessionKey.state, value: "")

            let item = Feedback(
                text: text,
                userID: userID,
                username: username,
                chatID: chatID,
                status: .new,
                officeTag: nil,
                source: "telegram"
            )
            try await item.save(on: app.db) // Fluent Application.db

            await app.telegram.sendMessageRemovingKeyboard(chatID, "‚úÖ *–°–ø–∞—Å–∏–±–æ, –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ!*")
            return
        }

        // fallback
        await app.telegram.sendMessage(chatID, "–ù–µ –ø–æ–Ω—è–ª ü§ñ. –ù–∞–∂–º–∏—Ç–µ */start* –¥–ª—è –º–µ–Ω—é.")
    }
}
